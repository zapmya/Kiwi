class Mandelbrot {

    int main() {
        mandel();

        return 0;
    }

    void mandel() {

        float xmin     = -2.5f;
        float ymin     = -1.5f;

        float xscale   = (1.5f+2.5f) / 60;
        float yscale   = (1.5f+1.5f) / 25;

        int i = 1000*1000*10000;
        while ( i > 0 ) {
            int y = 0;
            while ( y < 25 ) {
                int x = 0;
                while ( x < 60 ) {
                    int mx  = x;
                    int my  = y;
                    float cr= mx*xscale + xmin;
                    float ci= my*yscale + ymin;
                    float zr= cr;
                    float zi= ci;

                    int k   = 1;
                    while ( k < 90 ) {
                        /* Compute z1 from z0 */
                        float zr2  = zr*zr;
                        float zi2  = zi*zi;
                        float zrzi = zr*zi;
                        /* zr1 = zr0 * zr0 - zi0 * zi0 + cr */
                        /* zi1 = zr0 * zi0 + zr0 * zi0 + ci */
                        zr  = zr2 - zi2 + cr;
                        zi  = zrzi + zrzi + ci;

                        zr2 = zr*zr;
                        zi2 = zi*zi;
                        float mag2 = zr2 + zi2;
                        // Increment k
                        k         = k + 1;

                        if ( mag2 > 4 ) {
                          //  print(33+k);
                            k = 100;
                        }
                    }

/*                    if ( k != 100 ) {
                        print(33+k);
                    }
*/
                    x = x + 1;
                }
                y = y + 1;
  //              printLine();
            }
            i = i -1;
        }
    }


    extern void print(int x);

    extern void printDouble(double x);

    extern void printLine();
}
